---
import { CityService } from '../core/city.service';
const { city } = Astro.props;

// get current date in format YYYY-MM-DD and time zone Colombia

const now = new Date();
const options = { timeZone: 'America/Bogota', hour12: false };

const formatter = new Intl.DateTimeFormat('es-CO', {
  ...options,
  year: 'numeric',
  month: '2-digit',
  day: '2-digit',
});

const currentDate = formatter.format(now);
const isoDate = currentDate.split('/').reverse().join('-');

const restrictions = await CityService.getRestrictionByDate(city, isoDate);
---

<div class="flex flex-col gap-2">
  <time datetime={isoDate} class="text-2xl my-4">
    {currentDate}
  </time>

  {
    !restrictions.length ? (
      <p>No se encontraron restricciones para la fecha actual</p>
    ) : (
      <table aria-describedby="info-pico-placa">
        <caption id="info-pico-placa" class="sr-only">
          Tabla con las restricciones de pico y placa en Bogotá para el
          08/02/2025.
        </caption>
        <thead>
          <tr>
            <th scope="col">Vehículo</th>
            <th scope="col">Placas con restricción</th>
            <th scope="col">Información</th>
          </tr>
        </thead>
        <tbody>
          {restrictions.map((restriction) => (
            <tr>
              <td>{restriction.vehicle}</td>
              <td>{restriction.plates}</td>
              <td>{restriction.information || 'N/A'}</td>
            </tr>
          ))}
        </tbody>
      </table>
    )
  }
</div>
